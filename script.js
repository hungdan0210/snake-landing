const API_URL = "https://overnight-api-57tf.vercel.app/api/solve";

const input = document.getElementById("inputNumber");
const resultDiv = document.getElementById("result");
const spinner = document.getElementById("spinner");

let controller = null;

function formatBigInt(n) {
  return BigInt(n).toLocaleString("en-US");
}

function getLog10Rounded(n) {
  const log = Math.log10(Number(n));
  return Math.floor(log);
}

function stopCalculation() {
  if (controller) {
    controller.abort();
    controller = null;
    spinner.style.display = "none";
    resultDiv.innerHTML = "<p><b>‚õî ƒê√£ d·ª´ng t√≠nh to√°n.</b></p>";
  }
}

async function findSum() {
  const x = input.value.trim();

  if (!x || isNaN(x) || BigInt(x) <= 2n || BigInt(x) % 2n !== 0n) {
    resultDiv.innerHTML =
      "<p>‚ùå Vui l√≤ng nh·∫≠p m·ªôt s·ªë ch·∫µn l·ªõn h∆°n 2. (V√≠ d·ª•: 100, 1000000)</p>";
    return;
  }

  resultDiv.innerHTML = "";
  spinner.style.display = "block";

  controller = new AbortController();
  const signal = controller.signal;

  try {
    const response = await fetch(API_URL, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ x }),
      signal,
    });

    if (!response.ok) {
      throw new Error("L·ªói t·ª´ server.");
    }

    const data = await response.json();
    spinner.style.display = "none";
    controller = null;

    if (data && data.result) {
      const a = BigInt(data.result.a);
      const b = BigInt(data.result.b);
      const sum = a + b;
      const power = getLog10Rounded(x);

      resultDiv.innerHTML = `
        ‚úÖ ƒê√£ t√¨m ƒë∆∞·ª£c nghi·ªám:<br/>
        <b>A = ${formatBigInt(a)}</b><br/>
        <b>B = ${formatBigInt(b)}</b><br/>
        ‚ûï T·ªïng A + B = ${formatBigInt(sum)}<br/>
        üëâ Con s·ªë b·∫°n v·ª´a th·ª≠ s·∫•p x·ªâ <b>10^${power}</b><br/>
        <hr/>
        <i>Gi·ªõi h·∫°n l√† do c√¥ng ngh·ªá/m√°y t√≠nh, kh√¥ng ph·∫£i gi·ªõi h·∫°n c·ªßa thu·∫≠t to√°n OverNight.</i>
      `;
    } else {
      resultDiv.innerHTML = "<p>‚ö†Ô∏è Kh√¥ng t√¨m ƒë∆∞·ª£c nghi·ªám ph√π h·ª£p.</p>";
    }
  } catch (error) {
    if (error.name === "AbortError") {
      // ƒê√£ x·ª≠ l√Ω ·ªü stopCalculation
    } else {
      spinner.style.display = "none";
      controller = null;
      resultDiv.innerHTML = "<p>‚ùå L·ªói trong qu√° tr√¨nh t√≠nh to√°n ho·∫∑c server kh√¥ng ph·∫£n h·ªìi.</p>";
    }
  }
}
